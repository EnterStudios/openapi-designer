{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/fields/field.js","resources/fields/objectfield.js","resources/fields/textfield.js"],"names":["App","message","fields","obj","title","tf","placeholder","addField","obj2","tf2","tf3","field","push","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Field","className","_type","constructor","name","toLowerCase","JSON","stringify","model","ObjectField","Textfield","value"],"mappings":";;;;;;;;;;;;;;MAIaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,WAAKC,OAAL,GAAe,cAAf;AACA,WAAKC,MAAL,GAAc,EAAd;;AAGA,UAAMC,MAAM,8BAAZ;AACAA,UAAIC,KAAJ,GAAY,QAAZ;AACA,UAAMC,KAAK,0BAAX;AACAA,SAAGD,KAAH,GAAW,MAAX;AACAC,SAAGC,WAAH,GAAiB,YAAjB;AACAH,UAAII,QAAJ,CAAaF,EAAb;;AAEA,UAAMG,OAAO,8BAAb;AACAA,WAAKJ,KAAL,GAAa,eAAb;AACA,UAAMK,MAAM,0BAAZ;AACAA,UAAIL,KAAJ,GAAY,SAAZ;AACAK,UAAIH,WAAJ,GAAkB,YAAlB;AACA,UAAMI,MAAM,0BAAZ;AACAA,UAAIN,KAAJ,GAAY,SAAZ;AACAM,UAAIJ,WAAJ,GAAkB,YAAlB;AACAE,WAAKD,QAAL,CAAcE,GAAd;AACAD,WAAKD,QAAL,CAAcG,GAAd;;AAGA,WAAKH,QAAL,CAAcJ,GAAd;AACA,WAAKI,QAAL,CAAcC,IAAd;AAED;;kBAEDD,6BAASI,OAAO;AACd,WAAKT,MAAL,CAAYU,IAAZ,CAAiBD,KAAjB;AACD;;;;;;;;;;;oBCpCY;AACbE,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCvBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCFYY,gBAAAA;;;;WACXzB,QAAQ;;;;;0BAEG;AACT,YAAI0B,YAAY,KAAKC,KAAL,IAAc,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBC,WAAtB,EAA9B;;AAEA,eAAOJ,aAAa,OAApB;AACD;;;0BAEW;AACV,eAAO;AACL1B,iBAAO,KAAKA;AADP,SAAP;AAGD;;;0BAEe;AACd,eAAO+B,KAAKC,SAAL,CAAe,KAAKC,KAApB,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCfUC,sBAAAA;;;;;;;;;;;;sIACXpC,SAAS;;;0BAETK,6BAASI,OAAO;AACd,WAAKT,MAAL,CAAYU,IAAZ,CAAiBD,KAAjB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCLU4B,oBAAAA;;;;;;;;;;;;sIACXC,QAAQ,UACRlC,cAAc","file":"app-bundle.js","sourcesContent":["import 'bootstrap';\nimport {Textfield} from './resources/fields/textfield';\nimport {ObjectField} from './resources/fields/objectfield';\n\nexport class App {\n  constructor() {\n    this.message = 'Hello World!';\n    this.fields = [];\n\n    /* BEGIN TEST FORM DATA */\n    const obj = new ObjectField();\n    obj.title = 'Mui :3';\n    const tf = new Textfield();\n    tf.title = 'Yay!';\n    tf.placeholder = 'Enter text';\n    obj.addField(tf);\n\n    const obj2 = new ObjectField();\n    obj2.title = 'Another field';\n    const tf2 = new Textfield();\n    tf2.title = 'Input 2';\n    tf2.placeholder = 'Enter text';\n    const tf3 = new Textfield();\n    tf3.title = 'Input 3';\n    tf3.placeholder = 'Enter text';\n    obj2.addField(tf2);\n    obj2.addField(tf3);\n\n\n    this.addField(obj);\n    this.addField(obj2);\n    /* END TEST FORM DATA */\n  }\n\n  addField(field) {\n    this.fields.push(field);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Field {\n  title = '';\n\n  get type() {\n    let className = this._type || this.constructor.name.toLowerCase();\n    // className = className.substr(0, className.length - 'field'.length);\n    return className || 'blank';\n  }\n\n  get model() {\n    return {\n      title: this.title\n    };\n  }\n\n  get modelText() {\n    return JSON.stringify(this.model);\n  }\n}\n","import {Field} from './field';\n\nexport class ObjectField extends Field {\n  fields = [];\n\n  addField(field) {\n    this.fields.push(field);\n  }\n}\n","import {Field} from './field';\n\nexport class Textfield extends Field {\n  value = '';\n  placeholder = '';\n}\n"],"sourceRoot":"../src"}